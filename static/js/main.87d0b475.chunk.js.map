{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["ImageList","useState","images","setImages","isLoading","setIsLoading","fetchImages","a","fetch","then","response","json","data","useEffect","console","log","map","image","className","src","urls","small","alt","id","type","onclick","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAgBQA,EAAY,WAClB,MAA2BC,mBAAS,IAApC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAgCF,oBAAS,GAAzC,mBAAMG,EAAN,KAAiBC,EAAjB,KAKMC,EAAW,uCAAG,sBAAAC,EAAA,sDAClBC,MAAM,oDACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLP,GAAa,GACbF,EAAUS,MALI,2CAAH,qDA4BjB,OAJAC,qBAAU,WACRP,MACC,IAEI,mCAAGF,EAAY,8CAlBpBU,QAAQC,MACDb,EAAOc,KAAI,SAACC,GAEjB,OADAH,QAAQC,MAEN,sBAAKG,UAAU,iBAAf,UACE,qBAAKC,IAAKF,EAAMG,KAAKC,MAAOC,IAAKL,EAAMM,KACrC,wBAAQC,KAAK,SAASN,UAAU,gBAAgBO,QAAUvB,EAA1D,mBAFiCe,EAAMM,WAiBpCG,EA/CH,WAEV,OADAZ,QAAQC,IAAI,QAEV,8BACE,cAAC,EAAD,OCCSY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.87d0b475.chunk.js","sourcesContent":["\nimport React, {Component} from 'react';\n\nimport { useState , useEffect} from 'react';\nimport './App.css';\n\n\nconst App = () => {\n  console.log('here');\n  return (\n    <div>\n      <ImageList />\n    </div>\n  );\n};\n\n  const ImageList = () => {\n  const [images, setImages]= useState([]);\n  const[isLoading, setIsLoading]= useState(true);\n\n\n\n\n  const fetchImages = async () => {\n    fetch('https://www.mocky.io/v2/5ecb5c353000008f00ddd5a0')\n      .then((response) => response.json())\n      .then((data) => {\n        setIsLoading(false);\n        setImages(data);\n      });\n  };\n\n  const renderImages = () => {\n    console.log();\n    return images.map((image) => {\n      console.log();\n      return (\n        <div className=\"image__wrapper\" key={image.id}>\n          <img src={image.urls.small} alt={image.id} />\n          { <button type=\"button\" className=\"image__expand\" onclick={ images }>\n            exp\n          </button> }\n        </div>\n      );\n    });\n  };\n\n  useEffect(() => {\n    fetchImages();\n  }, []);\n\n  return <>{isLoading ? <p>loading ....</p> : renderImages()}</>;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}